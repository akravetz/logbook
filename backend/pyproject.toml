[project]
name = "workout-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Alex Kravetz", email = "alexdkravetz@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "asyncpg>=0.30.0",
    "atlas-provider-sqlalchemy>=0.3.2",
    "deepgram-sdk>=4.5.0",
    "fastapi>=0.115.13",
    "httpx>=0.28.1",
    "hypercorn>=0.17.3",
    "itsdangerous>=2.2.0",
    "pydantic-settings>=2.10.0",
    "pydantic[email]>=2.11.7",
    "python-jose[cryptography]>=3.5.0",
    "radon>=6.0.1",
    "rapidfuzz>=3.13.0",
    "sqlalchemy[asyncio]>=2.0.41",
    "vulture>=2.14",
]

[project.scripts]
workout-api = "workout_api:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "anyio>=4.0.0",
    "httpx>=0.28.1",
    "ipython>=9.3.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
    "testcontainers>=4.10.0",
]

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "PL",  # pylint
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "PLR2004", # magic value
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "sqlalchemy"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__ files

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "anyio: marks tests as anyio tests",
]
